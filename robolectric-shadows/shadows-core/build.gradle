def androidApi = hasProperty("androidApi") ? ext.androidApi.toInteger() : AndroidSdk.latestVersion
def robolectricVersion = AndroidSdk.versions[androidApi]
logger.info "Android API: $androidApi â€” $robolectricVersion"

apply plugin: ShadowsPlugin

def generatedShadowsDir = project.file("${project.buildDir}/generated-shadows")
def shadowsCoreProj = project.findProject(":robolectric-shadows/shadows-core")

//task velocity(type: VelocityTask) {
//    def shadowsCoreProject = project.findProject(":robolectric-shadows/shadows-core")
//    source = shadowsCoreProject.files("src/main/resources").asFileTree.matching { include "/**/*.vm" }
//
//    contextValues = [api: androidApi]
//    if (androidApi >= 21) {
//        contextValues.putAll(ptrClass: "long", ptrClassBoxed: "Long")
//    } else {
//        contextValues.putAll(ptrClass: "int", ptrClassBoxed: "Integer")
//    }
//
//    outputDir = generatedShadowsDir
//}

//task copyNonTemplatedShadows(type: Copy) {
//    mustRunAfter velocity
//
//    from shadowsCoreProj.files("src/main/java")
//    into generatedShadowsDir
//}

//task copyShadowProviderServiceFiles(type: Copy) {
//    from shadowsCoreProj.fileTree("src/main/resources").include("META-INF/**")
//    into project.file("${project.buildDir}/resources/main")
//}

shadows {
    packageName "org.robolectric"
}

//compileJava.dependsOn("copyNonTemplatedShadows")
//compileJava.dependsOn("copyShadowProviderServiceFiles")

//generateShadowProvider {
//    dependsOn velocity, copyNonTemplatedShadows
//}

configurations {
    jni
}

task copyNatives(type: Copy) {
    outputs.dir file("${buildDir}/resources/main")

    configurations.jni.files.each { File file ->
        def nativeJarMatch = file.name =~ /lib.*-natives-(.*)\.jar/
        if (nativeJarMatch) {
            inputs.file file

            def platformName = nativeJarMatch[0][1]
            from(zipTree(file)) { rename { f -> "$platformName/$f" } }
        }

        into project.file("$buildDir/resources/main")
    }
}

jar {
    dependsOn copyNatives
}

dependencies {
    // Project dependencies
    compile project(":robolectric-annotations")
    compile project(":robolectric-resources")
    compile project(":robolectric-utils")

    // Compile dependencies
    provided "com.intellij:annotations:12.0"
    compile "com.almworks.sqlite4java:sqlite4java:0.282"
    provided("org.robolectric:android-all:${AndroidSdk.versions[AndroidSdk.latestVersion]}") { force = true }
    compile "com.ibm.icu:icu4j:53.1"

//    jni "com.github.axet.litedb:libsqlite:0.282-3:natives-mac-x86_64"
//    jni "com.github.axet.litedb:libsqlite:0.282-3:natives-linux-x86"
//    jni "com.github.axet.litedb:libsqlite:0.282-3:natives-linux-x86_64"
//    jni "com.github.axet.litedb:libsqlite:0.282-3:natives-windows-x86"
//    jni "com.github.axet.litedb:libsqlite:0.282-3:natives-windows-x86_64"
}
